<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scan QR Code - <%= sessionName %></title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            text-align: center;
            max-width: 500px;
            width: 100%;
            position: relative;
            overflow: hidden;
        }

        .container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #25D366, #128C7E, #075E54);
            animation: pulse 2s ease-in-out infinite;
        }

        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.7; }
        }

        .header {
            margin-bottom: 30px;
        }

        .whatsapp-icon {
            width: 60px;
            height: 60px;
            margin: 0 auto 20px;
            background: #25D366;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            animation: bounce 2s infinite;
        }

        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
            40% { transform: translateY(-10px); }
            60% { transform: translateY(-5px); }
        }

        .whatsapp-icon svg {
            width: 30px;
            height: 30px;
            fill: white;
        }

        h1 {
            color: #333;
            font-size: 24px;
            margin-bottom: 10px;
        }

        .session-info {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 30px;
            border-left: 4px solid #25D366;
        }

        .session-name {
            font-weight: bold;
            color: #25D366;
            font-size: 18px;
        }

        .session-token {
            color: #666;
            font-size: 12px;
            font-family: monospace;
            margin-top: 5px;
        }

        .qr-container {
            position: relative;
            display: inline-block;
            margin-bottom: 30px;
        }

        .qr-image {
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            transition: transform 0.3s ease;
            max-width: 100%;
            height: auto;
        }

        .qr-image:hover {
            transform: scale(1.05);
        }

        .qr-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.8);
            border-radius: 15px;
            display: none;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 18px;
        }

        .status-container {
            margin-bottom: 30px;
        }

        .status {
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 20px;
            font-weight: bold;
            transition: all 0.3s ease;
        }

        .status.connecting {
            background: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }

        .status.qr_ready {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .status.connected {
            background: #d1ecf1;
            color: #0c5460;
            border: 1px solid #bee5eb;
        }

        .status.error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .timer {
            font-size: 18px;
            font-weight: bold;
            color: #25D366;
            margin-bottom: 20px;
        }

        .progress-bar {
            width: 100%;
            height: 6px;
            background: #e9ecef;
            border-radius: 3px;
            overflow: hidden;
            margin-bottom: 20px;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #25D366, #128C7E);
            border-radius: 3px;
            transition: width 1s ease;
        }

        .instructions {
            background: #e3f2fd;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 30px;
            text-align: left;
        }

        .instructions h3 {
            color: #1976d2;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
        }

        .instructions h3::before {
            content: "💡";
            margin-right: 10px;
        }

        .instructions ol {
            color: #555;
            line-height: 1.6;
            padding-left: 20px;
        }

        .instructions li {
            margin-bottom: 8px;
        }

        .buttons {
            display: flex;
            gap: 15px;
            justify-content: center;
            flex-wrap: wrap;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-size: 14px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .btn-primary {
            background: #25D366;
            color: white;
        }

        .btn-primary:hover {
            background: #128C7E;
            transform: translateY(-2px);
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-secondary:hover {
            background: #545b62;
            transform: translateY(-2px);
        }

        .btn-warning {
            background: #ffc107;
            color: #212529;
        }

        .btn-warning:hover {
            background: #e0a800;
            transform: translateY(-2px);
        }

        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 2px solid #f3f3f3;
            border-top: 2px solid #25D366;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .alert {
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            font-weight: bold;
        }

        .alert-warning {
            background: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }

        .alert-info {
            background: #d1ecf1;
            color: #0c5460;
            border: 1px solid #bee5eb;
        }

        @media (max-width: 480px) {
            .container {
                padding: 20px;
                margin: 10px;
            }
            
            .buttons {
                flex-direction: column;
            }
            
            .btn {
                width: 100%;
                justify-content: center;
            }
        }

        .success-animation {
            animation: successPulse 0.6s ease-in-out;
        }

        @keyframes successPulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="whatsapp-icon">
                <svg viewBox="0 0 24 24">
                    <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.89 3.215"/>
                </svg>
            </div>
            <h1>Scan QR Code</h1>
        </div>

        <div class="session-info">
            <div class="session-name"><%= sessionName %></div>
            <div class="session-token">Token: <%= token %></div>
        </div>

        <div class="status-container">
            <div id="status" class="status qr_ready">
                <span class="loading" id="loading" style="display: none;"></span>
                <span id="status-text">QR Code Ready - Scan dengan WhatsApp Anda</span>
            </div>
            
            <div class="timer">
                <span id="timer">⏱️ 60</span> detik tersisa
            </div>
            
            <div class="progress-bar">
                <div class="progress-fill" id="progress"></div>
            </div>
        </div>

        <div class="qr-container">
            <img id="qr-image" 
                 src="https://api.qrserver.com/v1/create-qr-code/?data=<%= encodeURIComponent(qr) %>&size=300x300&margin=20&format=png" 
                 alt="QR Code" 
                 class="qr-image"
                 loading="lazy">
            <div class="qr-overlay" id="qr-overlay">
                <span>Generating new QR...</span>
            </div>
        </div>

        <div class="instructions">
            <h3>Cara Scan QR Code:</h3>
            <ol>
                <li>Buka aplikasi <strong>WhatsApp</strong> di ponsel Anda</li>
                <li>Tap menu <strong>⋮</strong> (titik tiga) di pojok kanan atas</li>
                <li>Pilih <strong>"Linked Devices"</strong> atau <strong>"WhatsApp Web"</strong></li>
                <li>Tap <strong>"Link a Device"</strong></li>
                <li>Arahkan kamera ke QR code di atas</li>
                <li>Tunggu hingga tersambung</li>
            </ol>
        </div>

        <div id="alerts"></div>

        <div class="buttons">
            <a href="<%= refreshUrl %>" class="btn btn-primary" id="refresh-btn">
                🔄 Refresh QR
            </a>
            <a href="/session/restart/<%= token %>" class="btn btn-warning" id="restart-btn">
                🔃 Restart Session
            </a>
            <a href="/" class="btn btn-secondary">
                🏠 Back to Home
            </a>
        </div>
    </div>

    <script>
        let timeLeft = 60;
        let statusCheckInterval;
        let timerInterval;
        let isConnected = false;

        // DOM Elements
        const statusEl = document.getElementById('status');
        const statusTextEl = document.getElementById('status-text');
        const loadingEl = document.getElementById('loading');
        const timerEl = document.getElementById('timer');
        const progressEl = document.getElementById('progress');
        const qrImageEl = document.getElementById('qr-image');
        const qrOverlayEl = document.getElementById('qr-overlay');
        const alertsEl = document.getElementById('alerts');
        const refreshBtn = document.getElementById('refresh-btn');
        const restartBtn = document.getElementById('restart-btn');

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            startTimer();
            startStatusCheck();
            setupEventListeners();
            showAlert('info', '📱 Siapkan WhatsApp Anda untuk scan QR code');
        });

        function startTimer() {
            updateTimer();
            timerInterval = setInterval(() => {
                timeLeft--;
                updateTimer();
                
                if (timeLeft <= 0) {
                    clearInterval(timerInterval);
                    handleTimeout();
                }
            }, 1000);
        }

        function updateTimer() {
            const minutes = Math.floor(timeLeft / 60);
            const seconds = timeLeft % 60;
            timerEl.textContent = `⏱️ ${minutes}:${seconds.toString().padStart(2, '0')}`;
            
            // Update progress bar (reverse progress as time decreases)
            const progressPercent = ((60 - timeLeft) / 60) * 100;
            progressEl.style.width = progressPercent + '%';
            
            // Change color based on time left
            if (timeLeft <= 10) {
                progressEl.style.background = 'linear-gradient(90deg, #dc3545, #c82333)';
                timerEl.style.color = '#dc3545';
            } else if (timeLeft <= 30) {
                progressEl.style.background = 'linear-gradient(90deg, #ffc107, #e0a800)';
                timerEl.style.color = '#ffc107';
            }
        }

        function startStatusCheck() {
            statusCheckInterval = setInterval(checkStatus, 3000);
            checkStatus(); // Initial check
        }

        async function checkStatus() {
            try {
                const response = await fetch(`/session/status/<%= token %>`);
                const data = await response.json();
                
                updateStatus(data.status, data.isActive);
                
                if (data.isActive && !isConnected) {
                    handleConnection(data);
                }
            } catch (error) {
                console.error('Status check failed:', error);
                updateStatus('error');
            }
        }

        function updateStatus(status, isActive = false) {
            // Remove all status classes
            statusEl.className = 'status';
            
            switch (status) {
                case 'connecting':
                    statusEl.classList.add('connecting');
                    statusTextEl.textContent = 'Menghubungkan ke WhatsApp...';
                    loadingEl.style.display = 'inline-block';
                    break;
                    
                case 'qr_ready':
                    statusEl.classList.add('qr_ready');
                    statusTextEl.textContent = 'QR Code Ready - Scan dengan WhatsApp Anda';
                    loadingEl.style.display = 'none';
                    break;
                    
                case 'connected':
                    if (isActive) {
                        handleConnection({ status, isActive });
                        return;
                    }
                    statusEl.classList.add('connected');
                    statusTextEl.textContent = 'Terhubung! Menunggu konfirmasi...';
                    loadingEl.style.display = 'inline-block';
                    break;
                    
                case 'error':
                    statusEl.classList.add('error');
                    statusTextEl.textContent = 'Terjadi kesalahan koneksi';
                    loadingEl.style.display = 'none';
                    showAlert('warning', '⚠️ Koneksi bermasalah. Coba refresh QR atau restart session.');
                    break;
                    
                default:
                    statusEl.classList.add('connecting');
                    statusTextEl.textContent = 'Status tidak diketahui';
                    loadingEl.style.display = 'inline-block';
            }
        }

        function handleConnection(data) {
            if (isConnected) return;
            
            isConnected = true;
            clearInterval(timerInterval);
            clearInterval(statusCheckInterval);
            
            statusEl.classList.remove('connecting', 'qr_ready', 'error');
            statusEl.classList.add('connected', 'success-animation');
            statusTextEl.textContent = `✅ Berhasil terhubung! ${data.userName || 'WhatsApp User'}`;
            loadingEl.style.display = 'none';
            
            // Update timer to show success
            timerEl.textContent = '✅ Connected';
            timerEl.style.color = '#25D366';
            
            // Update progress to 100%
            progressEl.style.width = '100%';
            progressEl.style.background = 'linear-gradient(90deg, #25D366, #128C7E)';
            
            showAlert('info', '🎉 WhatsApp berhasil terhubung! Anda akan diarahkan dalam 3 detik...');
            
            // Redirect after 3 seconds
            setTimeout(() => {
                window.location.href = '/';
            }, 3000);
        }

        function handleTimeout() {
            showAlert('warning', '⏰ QR Code expired. Generating new QR code...');
            qrOverlayEl.style.display = 'flex';
            
            // Auto refresh after 2 seconds
            setTimeout(() => {
                window.location.reload();
            }, 2000);
        }

        function setupEventListeners() {
            // Refresh button
            refreshBtn.addEventListener('click', function(e) {
                e.preventDefault();
                showAlert('info', '🔄 Generating new QR code...');
                qrOverlayEl.style.display = 'flex';
                
                setTimeout(() => {
                    window.location.href = this.href;
                }, 1000);
            });

            // Restart button
            restartBtn.addEventListener('click', function(e) {
                if (!confirm('Are you sure you want to restart this session? This will clear all session data.')) {
                    e.preventDefault();
                }
            });

            // QR Image error handling
            qrImageEl.addEventListener('error', function() {
                showAlert('warning', '⚠️ Failed to load QR code. Please refresh.');
            });

            // Handle page visibility change
            document.addEventListener('visibilitychange', function() {
                if (document.visibilityState === 'visible' && !isConnected) {
                    // Resume status checking when page becomes visible
                    if (!statusCheckInterval) {
                        startStatusCheck();
                    }
                } else {
                    // Pause status checking when page is not visible
                    if (statusCheckInterval) {
                        clearInterval(statusCheckInterval);
                        statusCheckInterval = null;
                    }
                }
            });
        }

        function showAlert(type, message) {
            const alert = document.createElement('div');
            alert.className = `alert alert-${type}`;
            alert.textContent = message;
            
            alertsEl.appendChild(alert);
            
            // Auto remove alert after 5 seconds
            setTimeout(() => {
                if (alert.parentNode) {
                    alert.parentNode.removeChild(alert);
                }
            }, 5000);
        }

        // Cleanup on page unload
        window.addEventListener('beforeunload', function() {
            if (timerInterval) clearInterval(timerInterval);
            if (statusCheckInterval) clearInterval(statusCheckInterval);
        });
    </script>
</body>
</html>